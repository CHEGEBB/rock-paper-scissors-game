{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brian mwangi\\\\Documents\\\\rock-paper-scissors-game\\\\src\\\\components\\\\ComputerChoice.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport PaperComputer from '../components/PaperComputer';\nimport ScissorsComputer from '../components/ScissorsComputer';\nimport RockComputer from '../components/RockComputer';\nimport { GameContext } from '../context/GameContext';\nimport '../sass/game.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ComputerChoice = () => {\n  _s();\n  const [computerChoice, setComputerChoice] = useState(null);\n  const {\n    selectedChoice,\n    setSelectedChoice\n  } = useContext(GameContext);\n  const [computerSide, setComputerSide] = useState(false);\n  const [resultMessage, setResultMessage] = useState(null);\n  const {\n    updateScore\n  } = useContext(GameContext);\n  const [rippleWinner, setRippleWinner] = useState(null); // Track the winner for ripple effect\n\n  useEffect(() => {\n    if (selectedChoice) {\n      setComputerSide(true);\n    } else {\n      setComputerSide(false);\n    }\n  }, [selectedChoice]);\n  useEffect(() => {\n    if (computerChoice === null) {\n      const randomNumber = getRandomInt(3);\n      setComputerChoice(randomNumber);\n    }\n  }, [computerChoice]);\n  const getRandomInt = max => {\n    return Math.floor(Math.random() * max);\n  };\n  const handleResult = () => {\n    if (!selectedChoice || computerChoice === null) {\n      return;\n    }\n    if (selectedChoice === 'Paper' && computerChoice === 0) {\n      setResultMessage(\"It's a Tie\");\n      setRippleWinner('tie');\n    } else if (selectedChoice === 'Paper' && computerChoice === 1) {\n      setResultMessage('You Lose');\n      updateScore('lose');\n      setRippleWinner('computer');\n    } else if (selectedChoice === 'Paper' && computerChoice === 2) {\n      setResultMessage('You Win');\n      updateScore('win');\n      setRippleWinner('player');\n    } else if (selectedChoice === 'Scissors' && computerChoice === 0) {\n      setResultMessage('You win');\n      updateScore('win');\n      setRippleWinner('player');\n    } else if (selectedChoice === 'Scissors' && computerChoice === 1) {\n      setResultMessage(\"It's a Tie\");\n      setRippleWinner('tie');\n    } else if (selectedChoice === 'Scissors' && computerChoice === 2) {\n      setResultMessage('You Lose');\n      updateScore('lose');\n      setRippleWinner('computer');\n    } else if (selectedChoice === 'Rock' && computerChoice === 0) {\n      setResultMessage('You Lose');\n      updateScore('lose');\n      setRippleWinner('computer');\n    } else if (selectedChoice === 'Rock' && computerChoice === 1) {\n      setResultMessage('You win');\n      updateScore('win');\n      setRippleWinner('player');\n    } else if (selectedChoice === 'Rock' && computerChoice === 2) {\n      setResultMessage(\"It's a Tie\");\n      setRippleWinner('tie');\n    }\n  };\n  useEffect(() => {\n    handleResult();\n  }, [selectedChoice, computerChoice]);\n  const renderComputerComponent = () => {\n    switch (computerChoice) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(PaperComputer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 16\n        }, this);\n      case 1:\n        return /*#__PURE__*/_jsxDEV(ScissorsComputer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 16\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(RockComputer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  const resetGame = () => {\n    setResultMessage(null);\n    setSelectedChoice(null);\n    setComputerChoice(null);\n    setComputerSide(false);\n    setRippleWinner(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"computer-choice\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: [resultMessage && /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: resultMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetGame,\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"the-house\",\n      children: [computerSide && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"computer-side\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"The house picked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), rippleWinner && rippleWinner !== 'tie' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ripple\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), computerChoice !== null && renderComputerComponent()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(ComputerChoice, \"dtEVy75+U/MqlJi0USf9oxwSa2c=\");\n_c = ComputerChoice;\nexport default ComputerChoice;\nvar _c;\n$RefreshReg$(_c, \"ComputerChoice\");","map":{"version":3,"names":["React","useEffect","useState","useContext","PaperComputer","ScissorsComputer","RockComputer","GameContext","jsxDEV","_jsxDEV","ComputerChoice","_s","computerChoice","setComputerChoice","selectedChoice","setSelectedChoice","computerSide","setComputerSide","resultMessage","setResultMessage","updateScore","rippleWinner","setRippleWinner","randomNumber","getRandomInt","max","Math","floor","random","handleResult","renderComputerComponent","fileName","_jsxFileName","lineNumber","columnNumber","resetGame","className","children","onClick","_c","$RefreshReg$"],"sources":["C:/Users/brian mwangi/Documents/rock-paper-scissors-game/src/components/ComputerChoice.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport PaperComputer from '../components/PaperComputer';\r\nimport ScissorsComputer from '../components/ScissorsComputer';\r\nimport RockComputer from '../components/RockComputer';\r\nimport { GameContext } from '../context/GameContext';\r\nimport '../sass/game.scss';\r\n\r\nconst ComputerChoice = () => {\r\n  const [computerChoice, setComputerChoice] = useState(null);\r\n  const { selectedChoice, setSelectedChoice } = useContext(GameContext);\r\n  const [computerSide, setComputerSide] = useState(false);\r\n  const [resultMessage, setResultMessage] = useState(null);\r\n  const { updateScore } = useContext(GameContext);\r\n  const [rippleWinner, setRippleWinner] = useState(null); // Track the winner for ripple effect\r\n\r\n  useEffect(() => {\r\n    if (selectedChoice) {\r\n      setComputerSide(true);\r\n    } else {\r\n      setComputerSide(false);\r\n    }\r\n  }, [selectedChoice]);\r\n\r\n  useEffect(() => {\r\n    if (computerChoice === null) {\r\n      const randomNumber = getRandomInt(3);\r\n      setComputerChoice(randomNumber);\r\n    }\r\n  }, [computerChoice]);\r\n\r\n  const getRandomInt = (max) => {\r\n    return Math.floor(Math.random() * max);\r\n  };\r\n\r\n  const handleResult = () => {\r\n    if (!selectedChoice || computerChoice === null) {\r\n      return;\r\n    }\r\n\r\n    if (selectedChoice === 'Paper' && computerChoice === 0) {\r\n      setResultMessage(\"It's a Tie\");\r\n      setRippleWinner('tie');\r\n    } else if (selectedChoice === 'Paper' && computerChoice === 1) {\r\n      setResultMessage('You Lose');\r\n      updateScore('lose');\r\n      setRippleWinner('computer');\r\n    } else if (selectedChoice === 'Paper' && computerChoice === 2) {\r\n      setResultMessage('You Win');\r\n      updateScore('win');\r\n      setRippleWinner('player');\r\n    } else if (selectedChoice === 'Scissors' && computerChoice === 0) {\r\n      setResultMessage('You win');\r\n      updateScore('win');\r\n      setRippleWinner('player');\r\n    } else if (selectedChoice === 'Scissors' && computerChoice === 1) {\r\n      setResultMessage(\"It's a Tie\");\r\n      setRippleWinner('tie');\r\n    } else if (selectedChoice === 'Scissors' && computerChoice === 2) {\r\n      setResultMessage('You Lose');\r\n      updateScore('lose');\r\n      setRippleWinner('computer');\r\n    } else if (selectedChoice === 'Rock' && computerChoice === 0) {\r\n      setResultMessage('You Lose');\r\n      updateScore('lose');\r\n      setRippleWinner('computer');\r\n    } else if (selectedChoice === 'Rock' && computerChoice === 1) {\r\n      setResultMessage('You win');\r\n      updateScore('win');\r\n      setRippleWinner('player');\r\n    } else if (selectedChoice === 'Rock' && computerChoice === 2) {\r\n      setResultMessage(\"It's a Tie\");\r\n      setRippleWinner('tie');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleResult();\r\n  }, [selectedChoice, computerChoice]);\r\n\r\n  const renderComputerComponent = () => {\r\n    switch (computerChoice) {\r\n      case 0:\r\n        return <PaperComputer />;\r\n      case 1:\r\n        return <ScissorsComputer />;\r\n      case 2:\r\n        return <RockComputer />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const resetGame = () => {\r\n    setResultMessage(null);\r\n    setSelectedChoice(null);\r\n    setComputerChoice(null);\r\n    setComputerSide(false);\r\n    setRippleWinner(null); \r\n  };\r\n\r\n  return (\r\n    <div className=\"computer-choice\">\r\n      <div className=\"results\">\r\n        <div className=\"result\">\r\n          {resultMessage && <h1>{resultMessage}</h1>}\r\n          <button onClick={resetGame}>Play Again</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"the-house\">\r\n        {computerSide && (\r\n          <div className='computer-side'>\r\n            <h1>The house picked</h1>\r\n            {rippleWinner && rippleWinner !== 'tie' && (\r\n              <div className=\"ripple\">\r\n                <div className=\"circle\"></div>\r\n                <div className=\"circle\"></div>\r\n                <div className=\"circle\"></div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        {computerChoice !== null && renderComputerComponent()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComputerChoice;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}